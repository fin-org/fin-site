## Explicit Extensibility

Fin dedicates part of its syntax (a subset of symbols) for use as an extension mechanism.
Programmers can register custom logic to run at extension points (including tagged collections).

Having clear extensibility is nice, but having to write extensions for _every_ non-fin value type is
an issue. For universal types, not only is it a recipe for error, external parties don't have a
connection when they absolutely should have one. Interoperability suffers.

Fin addresses this by providing [builtins](/builtins) - a curated set of extensions that leverage
established and emerging standards. Compliant fin libraries support these on a best-effort basis.
The hope is that for most cases developers won't need to reach for extensions.
