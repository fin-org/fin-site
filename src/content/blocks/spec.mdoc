# Core Fin Specification

- File extension is `.fin`
- MIME type is `application/fin`
- The fin format is defined in terms of Unicode text (code points).
- Each code point is distinct (e.g. case-sensitive).
- All fin payloads must be encoded as UTF-8. Invalid UTF-8 is invalid Fin.
- Decoders will ignore a UTF-8 encoded byte order mark `U+FEFF` at the start of input.
- Encoders must not emit a byte order mark at the start of output.

## Symbols

{% code_example id="symbols" /%}

- Symbols can contain the following code points
  - **:** colon `U+003A`
  - **\_** underscore `U+005F`
  - **a-z** lowercase letters `U+0061 - U+007A`
  - **0-9** decimal digits `U+0030 - U+0039`
- Must not start with a digit.
- Must not end with a colon.
- A digit must not follow a colon.
- Consecutive underscores are not allowed.
- Consecutive colons are not allowed.

## Numbers

{% code_example id="numbers" /%}

- Numbers can contain the following code points
  - **0-9** decimal digits `U+0030 - U+0039`
  - **-** hyphen `U+002D`
  - **.** full stop `U+002E`
  - **e** lowercase letter e `U+0065`
- Syntax notation

  ```
  dig  = "0" ... "9" .
  dig1 = "1" ... "9" .
  int  = "0" | dig1 {dig} .
  frac = "." dig {dig} .
  exp  = "e" [ "-" ] int .
  number = [ "-" ] int [ frac ] [ exp ] .
  ```

## Strings

### Escaped Strings

- Any sequence of Unicode code points within double quotes `"`.
- Supports escape sequence interpretation.
  - `\` initiates an escape sequence.
  - An error occurs if the next code point results in an unknown escape sequence.
  - The supported escape sequences are
    - `\\` backslash.
    - `\"` double quotation. Prevents early termination of the string.
    - `\n` line feed.
    - `\r` carriage return.
    - `\t` horizontal tab.
    - `\u{hex}` Unicode escape. Where `hex` is the hexadecimal number for a Unicode code point.

{% code_example id="escaped_strings" /%}

### Raw Strings

- `accept` state
  - Initiated by a vertical bar `|`
  - The string includes all code points up to and including the next line feed `\n` which
    transitions the state to `ignore`
- `ignore` state
  - All space and horizontal tabs are ignored
  - `|` transitions to the `accept` state
  - Any other code point terminates the string.

{% code_example id="raw_strings" /%}
